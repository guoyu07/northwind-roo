// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.nw.service.impl;

import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import roo.nw.model.Report;
import roo.nw.repository.ReportRepository;
import roo.nw.service.impl.ReportServiceImpl;

privileged aspect ReportServiceImpl_Roo_Service_Impl {
    
    declare @type: ReportServiceImpl: @Service;
    
    declare @type: ReportServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ReportRepository ReportServiceImpl.reportRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param reportRepository
     */
    @Autowired
    public ReportServiceImpl.new(ReportRepository reportRepository) {
        setReportRepository(reportRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ReportRepository
     */
    public ReportRepository ReportServiceImpl.getReportRepository() {
        return reportRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param reportRepository
     */
    public void ReportServiceImpl.setReportRepository(ReportRepository reportRepository) {
        this.reportRepository = reportRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param report
     */
    @Transactional
    public void ReportServiceImpl.delete(Report report) {
        getReportRepository().delete(report);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Report> ReportServiceImpl.save(Iterable<Report> entities) {
        return getReportRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ReportServiceImpl.delete(Iterable<Long> ids) {
        List<Report> toDelete = getReportRepository().findAll(ids);
        getReportRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Report
     */
    @Transactional
    public Report ReportServiceImpl.save(Report entity) {
        return getReportRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Report
     */
    public Report ReportServiceImpl.findOne(Long id) {
        return getReportRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Report
     */
    public Report ReportServiceImpl.findOneForUpdate(Long id) {
        return getReportRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Report> ReportServiceImpl.findAll(Iterable<Long> ids) {
        return getReportRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Report> ReportServiceImpl.findAll() {
        return getReportRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ReportServiceImpl.count() {
        return getReportRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Report> ReportServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getReportRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Report> ReportServiceImpl.getEntityType() {
        return Report.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ReportServiceImpl.getIdType() {
        return Long.class;
    }
    
}
