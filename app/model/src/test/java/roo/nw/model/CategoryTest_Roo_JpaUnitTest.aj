// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.nw.model;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.Arrays;
import java.util.Collections;
import org.junit.Test;
import roo.nw.model.Category;
import roo.nw.model.CategoryTest;
import roo.nw.model.Product;
import roo.nw.model.dod.CategoryFactory;
import roo.nw.model.dod.ProductFactory;

privileged aspect CategoryTest_Roo_JpaUnitTest {
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CategoryFactory CategoryTest.categoryFactory = new CategoryFactory();
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ProductFactory CategoryTest.productFactory = new ProductFactory();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return CategoryFactory
     */
    public CategoryFactory CategoryTest.getCategoryFactory() {
        return categoryFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoryFactory
     */
    public void CategoryTest.setCategoryFactory(CategoryFactory categoryFactory) {
        this.categoryFactory = categoryFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ProductFactory
     */
    public ProductFactory CategoryTest.getProductFactory() {
        return productFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param productFactory
     */
    public void CategoryTest.setProductFactory(ProductFactory productFactory) {
        this.productFactory = productFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @throws Exception
     */
    @Test
    public void CategoryTest.addToProductsShouldAddTheProductToTheproductsRelationship() throws Exception {
        // Setup
        Category category = getCategoryFactory().create(0);
        Product product1 = getProductFactory().create(0);
        Product product2 = getProductFactory().create(1);
        
        // Exercise
        category.addToProducts(Arrays.asList(product1, product2));
        
        // Verify
        assertThat(category.getProducts()).as("Check 'addToProducts' adds the products to the relationship")
            .contains(product1).contains(product2);
        assertThat(category).as("Check 'addToProducts' updates the Product relationship side")
            .isEqualTo(product1.getCategory()).isEqualTo(product2.getCategory());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @throws Exception
     */
    @Test
    public void CategoryTest.addToProductsShouldRemoveTheProductFromTheproductsRelationship() throws Exception {
        // Setup
        Category category = getCategoryFactory().create(0);
        Product product1 = getProductFactory().create(0);
        Product product2 = getProductFactory().create(1);
        category.addToProducts(Arrays.asList(product1, product2));
        
        // Exercise
        category.removeFromProducts(Collections.singleton(product1));
        
        // Verify
        assertThat(product1.getCategory()).as("Check 'removeFromProducts' updates the Product relationship side")
            .isNull();
        assertThat(category.getProducts()).as("Check 'removeFromProducts' removes a Product from the relationship")
            .doesNotContain(product1).contains(product2);
    }
    
}
