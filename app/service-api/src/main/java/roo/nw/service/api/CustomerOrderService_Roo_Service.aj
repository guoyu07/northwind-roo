// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.nw.service.api;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.format.EntityResolver;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import roo.nw.model.City;
import roo.nw.model.Country;
import roo.nw.model.Customer;
import roo.nw.model.CustomerOrder;
import roo.nw.model.Employee;
import roo.nw.model.Region;
import roo.nw.model.Shipper;
import roo.nw.service.api.CustomerOrderService;

privileged aspect CustomerOrderService_Roo_Service {
    
    declare parents: CustomerOrderService extends EntityResolver<CustomerOrder, Long>;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerOrder
     */
    public abstract CustomerOrder CustomerOrderService.findOne(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     */
    public abstract void CustomerOrderService.delete(CustomerOrder customerOrder);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    public abstract List<CustomerOrder> CustomerOrderService.save(Iterable<CustomerOrder> entities);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    public abstract void CustomerOrderService.delete(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return CustomerOrder
     */
    public abstract CustomerOrder CustomerOrderService.save(CustomerOrder entity);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerOrder
     */
    public abstract CustomerOrder CustomerOrderService.findOneForUpdate(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public abstract List<CustomerOrder> CustomerOrderService.findAll(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public abstract List<CustomerOrder> CustomerOrderService.findAll();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public abstract long CustomerOrderService.count();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findAll(GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param orderDetailsToAdd
     * @return CustomerOrder
     */
    public abstract CustomerOrder CustomerOrderService.addToOrderDetails(CustomerOrder customerOrder, Iterable<Long> orderDetailsToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param orderDetailsToRemove
     * @return CustomerOrder
     */
    public abstract CustomerOrder CustomerOrderService.removeFromOrderDetails(CustomerOrder customerOrder, Iterable<Long> orderDetailsToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param orderDetails
     * @return CustomerOrder
     */
    public abstract CustomerOrder CustomerOrderService.setOrderDetails(CustomerOrder customerOrder, Iterable<Long> orderDetails);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param city
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findByCity(City city, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param country
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findByCountry(Country country, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customer
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findByCustomer(Customer customer, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findByEmployee(Employee employee, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param region
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findByRegion(Region region, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param shipper
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<CustomerOrder> CustomerOrderService.findByShipper(Shipper shipper, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param city
     * @return Long
     */
    public abstract long CustomerOrderService.countByCity(City city);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param country
     * @return Long
     */
    public abstract long CustomerOrderService.countByCountry(Country country);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customer
     * @return Long
     */
    public abstract long CustomerOrderService.countByCustomer(Customer customer);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employee
     * @return Long
     */
    public abstract long CustomerOrderService.countByEmployee(Employee employee);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param region
     * @return Long
     */
    public abstract long CustomerOrderService.countByRegion(Region region);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param shipper
     * @return Long
     */
    public abstract long CustomerOrderService.countByShipper(Shipper shipper);
    
}
